<?php

/**
 * @file
 * Functions to support theming.
 */

/**
 * Implements hook_preprocess_image_widget().
 */
function drupal4gov_preprocess_image_widget(array &$variables) {
  $data = &$variables['data'];

  // This prevents image widget templates from rendering preview container HTML
  // to users that do not have permission to access these previews.
  // @todo revisit in https://drupal.org/node/953034
  // @todo revisit in https://drupal.org/node/3114318
  if (isset($data['preview']['#access']) && $data['preview']['#access'] === FALSE) {
    unset($data['preview']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu-local-task templates.
 */
function drupal4gov_preprocess_menu_local_task(&$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'tabs__link';
  $variables['link']['#options']['attributes']['class'][] = 'js-tabs-link';

  // Ensure is-active class is set when the tab is active. The generic active
  // link handler applies stricter comparison rules than what is necessary for
  // tabs.
  if (isset($variables['is_active']) && $variables['is_active'] === TRUE) {
    $variables['link']['#options']['attributes']['class'][] = 'is-active';
  }

  if (isset($variables['element']['#level'])) {
    $variables['level'] = $variables['element']['#level'];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function drupal4gov_preprocess_field(&$variables) {
  $rich_field_types = ['text_with_summary', 'text', 'text_long'];

  if (in_array($variables['field_type'], $rich_field_types, TRUE)) {
    $variables['attributes']['class'][] = 'text-formatted';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function drupal4gov_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view__' . $variables['view']->id();
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for node.
 */
function drupal4gov_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  $elements = $variables['elements'];

  if ($uuid = $elements['#derivative_plugin_id']) {
    if ($block = \Drupal::service('entity.repository')->loadEntityByUuid('block_content', $uuid)) {
      $block_type = $block->bundle();
      $view_mode = strtr($variables['elements']['#configuration']['view_mode'], '.', '_');
      $suggestions[] = 'block__block_content__' . $block_type;
      $suggestions[] = 'block__' . $block_type;
      $suggestions[] = 'block__' . $block_type . '__' . $view_mode;
    }
  }
}
